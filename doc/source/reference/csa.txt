.. _csa:

csa
***

There are 2 forms of this command.

:code:`csa(original, energy, phi, theta, results, slice radius, slice count, random seed, slices, visualization, length, length slices)`
========================================================================================================================================

Analyzes cross-sections of cylindrical, tubular, or fibre-like objects. Use to e.g. measure cross-sectional area of fibres. Requires that the local orientation of the fibres has been determined using, e.g., :ref:`cylinderorientation` command.

This command cannot be used in the distributed processing mode. If you need it, please contact the authors.

Arguments
---------

original [input]
~~~~~~~~~~~~~~~~

**Data type:** uint8 image, uint16 image, uint32 image, uint64 image, int8 image, int16 image, int32 image, int64 image, float32 image

Binary image containing the fibres as foreground.

energy [input]
~~~~~~~~~~~~~~

**Data type:** float32 image

Image corresponding to the energy output image of cylinderorientation command. Non-zero energy signifies that local orientation is available at that location.

phi [input]
~~~~~~~~~~~

**Data type:** float32 image

The azimuthal angle of the local fibre orientation direction. The angle is given in radians and measured from positive :math:`x`-axis towards positive :math:`y`-axis and is given in range :math:`[-\pi, \pi]`.

theta [input]
~~~~~~~~~~~~~

**Data type:** float32 image

The polar angle of the local fibre orientation direction. The angle is given in radians and measured from positive :math:`z`-axis towards :math:`xy`-plane. The values are in range :math:`[0, \pi]`.

results [output]
~~~~~~~~~~~~~~~~

**Data type:** float32 image

Image where analysis results are placed. This image will contain one row for each fibre cross-section analyzed. Use command :ref:`csaheaders` to retrieve meanings of columns.

slice radius [input]
~~~~~~~~~~~~~~~~~~~~

**Data type:** positive integer

**Default value:** 40

Half width of one cross-sectional slice

slice count [input]
~~~~~~~~~~~~~~~~~~~

**Data type:** positive integer

**Default value:** 1000

Count of cross-sectional slices to analyze

random seed [input]
~~~~~~~~~~~~~~~~~~~

**Data type:** positive integer

**Default value:** 123

Seed for random number generator.

slices [output]
~~~~~~~~~~~~~~~

**Data type:** uint8 image, uint16 image, uint32 image, uint64 image, int8 image, int16 image, int32 image, int64 image, float32 image

The extracted slices are placed into this image.

visualization [output]
~~~~~~~~~~~~~~~~~~~~~~

**Data type:** uint8 image, uint16 image, uint32 image, uint64 image, int8 image, int16 image, int32 image, int64 image, float32 image

The locations where the slices are extracted from are drawn into this image

length [input]
~~~~~~~~~~~~~~

**Data type:** float32 image

Image containing local fibre length.

length slices [output]
~~~~~~~~~~~~~~~~~~~~~~

**Data type:** float32 image

The extracted slices from the length image are placed into this image.

See also
--------

:ref:`analyzeparticles`, :ref:`listanalyzers`, :ref:`headers`, :ref:`fillparticles`, :ref:`drawellipsoids`, :ref:`label`, :ref:`analyzelabels`, :ref:`regionremoval`, :ref:`greedycoloring`, :ref:`csa`, :ref:`cylinderorientation`

:code:`csa(original, energy, phi, theta, results, slice radius, slice count, random seed, slices, visualization)`
=================================================================================================================

Analyzes cross-sections of cylindrical, tubular, or fibre-like objects. Use to e.g. measure cross-sectional area of fibres. Requires that the local orientation of the fibres has been determined using, e.g., :ref:`cylinderorientation` command.

This command cannot be used in the distributed processing mode. If you need it, please contact the authors.

Arguments
---------

original [input]
~~~~~~~~~~~~~~~~

**Data type:** uint8 image, uint16 image, uint32 image, uint64 image, int8 image, int16 image, int32 image, int64 image, float32 image

Binary image containing the fibres as foreground.

energy [input]
~~~~~~~~~~~~~~

**Data type:** float32 image

Image corresponding to the energy output image of cylinderorientation command. Non-zero energy signifies that local orientation is available at that location.

phi [input]
~~~~~~~~~~~

**Data type:** float32 image

The azimuthal angle of the local fibre orientation direction. The angle is given in radians and measured from positive :math:`x`-axis towards positive :math:`y`-axis and is given in range :math:`[-\pi, \pi]`.

theta [input]
~~~~~~~~~~~~~

**Data type:** float32 image

The polar angle of the local fibre orientation direction. The angle is given in radians and measured from positive :math:`z`-axis towards :math:`xy`-plane. The values are in range :math:`[0, \pi]`.

results [output]
~~~~~~~~~~~~~~~~

**Data type:** float32 image

Image where analysis results are placed. This image will contain one row for each fibre cross-section analyzed. Use command :ref:`csaheaders` to retrieve meanings of columns.

slice radius [input]
~~~~~~~~~~~~~~~~~~~~

**Data type:** positive integer

**Default value:** 40

Half width of one cross-sectional slice

slice count [input]
~~~~~~~~~~~~~~~~~~~

**Data type:** positive integer

**Default value:** 1000

Count of cross-sectional slices to analyze

random seed [input]
~~~~~~~~~~~~~~~~~~~

**Data type:** positive integer

**Default value:** 123

Seed for random number generator.

slices [output]
~~~~~~~~~~~~~~~

**Data type:** uint8 image, uint16 image, uint32 image, uint64 image, int8 image, int16 image, int32 image, int64 image, float32 image

The extracted slices are placed into this image.

visualization [output]
~~~~~~~~~~~~~~~~~~~~~~

**Data type:** uint8 image, uint16 image, uint32 image, uint64 image, int8 image, int16 image, int32 image, int64 image, float32 image

The locations where the slices are extracted from are drawn into this image

See also
--------

:ref:`analyzeparticles`, :ref:`listanalyzers`, :ref:`headers`, :ref:`fillparticles`, :ref:`drawellipsoids`, :ref:`label`, :ref:`analyzelabels`, :ref:`regionremoval`, :ref:`greedycoloring`, :ref:`csa`, :ref:`cylinderorientation`
