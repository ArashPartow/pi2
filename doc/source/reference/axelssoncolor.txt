.. _axelssoncolor:

axelssoncolor
*************


**Syntax:** :code:`axelssoncolor(geometry, phi, theta, r, g, b)`

Color coding of orientation data used in Axelsson - Estimating 3D fibre orientation in volume images. This color coding is most suited to materials where most orientations are in the :math:`xy`-plane, e.g. paper or cardboard. In the output, hue describes angle between the positive :math:`x`-axis and the projection of the orientation vector to the :math:`xy`-plane, i.e. the azimuthal component of the orientation direction. Absolute value of the :math:`z`-coordinate of the orientation direction is mapped to saturation, maximum being at the :math:`xy`-plane. Value is mapped to the pixel value in the geometry image normalized such that the maximum value of the geometry image is mapped to 1, and zero to 0.

This command can be used in the distributed processing mode. Use :ref:`distribute` command to change processing mode from local to distributed.

Arguments
---------

geometry [input]
~~~~~~~~~~~~~~~~

**Data type:** uint8 image, uint16 image, uint32 image, uint64 image, int8 image, int16 image, int32 image, int64 image, float32 image

An image that contains the geometry for which local orientation has been determined.

phi [input]
~~~~~~~~~~~

**Data type:** float32 image

The azimuthal angle of the local orientation direction. The angle is given in radians and measured from positive :math:`x`-axis towards positive :math:`y`-axis and is given in range :math:`[-\pi, \pi]`.

theta [input]
~~~~~~~~~~~~~

**Data type:** float32 image

The polar angle of the local orientation direction. The angle is given in radians and measured from positive :math:`z`-axis towards :math:`xy`-plane. The values are in range :math:`[0, \pi]`.

r [output]
~~~~~~~~~~

**Data type:** uint8 image

Red channel of the result will be stored into this image.

g [output]
~~~~~~~~~~

**Data type:** uint8 image

Green channel of the result will be stored into this image.

b [output]
~~~~~~~~~~

**Data type:** uint8 image

Blue channel of the result will be stored into this image.

See also
--------

:ref:`cylindricality`, :ref:`cylinderorientation`, :ref:`plateorientation`, :ref:`mainorientationcolor`, :ref:`axelssoncolor`, :ref:`orientationdifference`
