.. pi2 documentation master file, created by
   sphinx-quickstart on Tue Jan  7 10:36:00 2020.
   You can adapt this file completely to your liking, but it should at least
   contain the root `toctree` directive.

Documentation of pi2
====================

This is documentation for pi2/itl2, an image analysis program/library designed for processing and analysis of
terapixel-scale volume images :ref:`locally or on a computer cluster <cluster_config>`.

The pi2 environment can be used from e.g.
:ref:`Python <usage_python>`,
:ref:`C/C++ <usage_cpp>`, and
:ref:`.NET <usage_cs>` programs, and as a
:ref:`standalone executable <usage_standalone>` (like ImageMagick).

Some of the capabilities of pi2 include

* :ref:`Fast non-rigid stitching <nr_stitcher>`
* :ref:`Saturating image arithmetic <saturating_arithmetic>`
* :ref:`Filtering <filtering_example>` for noise reduction: :ref:`bilateral <bilateralfilter>`, :ref:`approximate bilateral <bilateralfilterapprox>`, :ref:`variance weighted mean <vawefilter>`, :ref:`median <medianfilter>`, :ref:`Gaussian <gaussfilter>`, :ref:`high-pass <highpassfilter>`, ...
* Post-processing of segmented images: :ref:`small region removal <regionremoval>` (volume opening), :ref:`minimum <minfilter>` and :ref:`maximum <maxfilter>` filtering (optionally with fast approximate spherical structuring element), :ref:`opening <openingfilter>` and :ref:`closing <closingfilter>`, ...
* :ref:`Skeletonization <skeleton_example>` (:ref:`line <lineskeleton>` and :ref:`plate+line <surfaceskeleton>` skeletons), skeleton :ref:`tracing <tracelineskeleton>` with measurements (branch length, cross-sectional area...), skeleton :ref:`visualization <fillskeleton>`, :ref:`pruning <pruneskeleton>`,...
* :ref:`Detection of interfaces <carpet_example>` using an Edwards-Wilkinson surface model
* :ref:`Orientation analysis <orientation_example>` using the structure tensor approach
* Fast separable :ref:`distance map <dmap>` and :ref:`local thickness map <local_thickness_example>`
* :ref:`Watershed segmentation <watershed_example>`, :ref:`region growing <grow>`, estimation of surface curvature by :ref:`quadric fitting <curvature>` or using an :ref:`implicit form <meancurvature>`.
* :ref:`Particle/blob/connected component analysis <particle_analysis>` and :ref:`visualization <particle_analysis_filtering>`.
* :ref:`Generation <particle_analysis>` of 3D shapes like spheres, boxes, ...
* :ref:`I/O <io>` with :file:`.raw`, :file:`.tif`, :file:`.vol`, and :file:`.nrrd` files; :file:`.tif` and :file:`.png` image sequences; :ref:`memory-mapped <memory_mapping>` :file:`.raw` files.
* Supports (at least) unsigned and signed 8-, 16-, 32-, and 64-bit integer and 32-bit floating point pixels.
* Most operations can be performed on arbitrarily large images either locally or on a :ref:`computer cluster <cluster_config>` with lazy evaluation.




Installation
------------

Versions for Windows and CentOS Linux can be downloaded from the `GitHub Releases page <https://github.com/arttumiettinen/pi2/releases>`_.
For Windows users no specific installation steps are necessary.
Linux users must ensure that fftw3, libpng, libtiff, zlib, and a recent version of glibc are installed.

For other platforms, refer to prerequisites and build instructions at `GitHub <https://github.com/arttumiettinen/pi2>`_.



Quick start examples
--------------------

Python script or iPython console::

	from pi2py2 import *
	pi = Pi2()
	img = pi.newimage(ImageDataType.UINT8, 100, 100, 100)
	pi.noise(img, 100, 25)
	pi.writetif(img, './noise')


Linux shell with pi2 as a standalone program::
	
	./pi2 "newimage(img, uint8, 100, 100, 100); noise(img, 100, 25); writetif(img, ./noise);"


Windows Command Prompt with pi2 as a standalone program::

	pi2 newimage(img, uint8, 100, 100, 100); noise(img, 100, 25); writetif(img, ./noise);
	
	
In a C# program:

.. code-block:: c

	Pi2 pi = new Pi2();
	Pi2Image img = pi.NewImage(ImageDataType.UInt8, 100, 100, 100);
	pi.Noise(img, 100, 25);
	pi.WriteTif(img, "./noise");


For more complicated examples, please refer to the :ref:`examples` page.


Further reading
---------------

.. toctree::
   :maxdepth: 1
   
   usage_python
   usage_command_line
   usage_cs
   usage_c_cpp
   cluster_conf
   nr_stitcher
   examples/index
   reference/index
   io
   references
   spherical_coordinates
   license
   about
